import{j as i}from"./useTheme-BlgjukAR.js";import{C as u}from"./CardView-C0E-qGtZ.js";import"./SelectableCardView-ZKkDSe5Y.js";import"./iframe-CAFMPHJt.js";import{S as f}from"./Section-Dn2BrW5s.js";import{G as s}from"./GridView-BhZHNWnk.js";import"./index-B8v4ui00.js";import"./extends-DCeRLDon.js";import"./TruncatedTypography-DmrDd2oe.js";import"./styled-DiKmFtHj.js";import"./generateUtilityClasses-Bt1hkMzr.js";import"./useThemeProps-d5D-3UEo.js";import"./Typography-pnPGBOAX.js";import"./Paper-CXN2jwlL.js";import"./ButtonBase-DB5tx4ME.js";import"./useIsFocusVisible-DaJFNZTp.js";import"./assertThisInitialized-JNA2pt04.js";import"./inheritsLoose-D9gYxgQu.js";import"./TransitionGroupContext-CqYiLpIN.js";import"./useForkRef-DmN6nj6Q.js";import"./useEventCallback-B2e7cEsY.js";import"./useEnhancedEffect-BQ6nKucK.js";import"./Tooltip-BINYJuEt.js";import"./index-BHz6K919.js";import"./useTheme-C5hLunsB.js";import"./useControlled-BLkA-84f.js";import"./Portal-p5KjR-_u.js";import"./index-C62N0sIa.js";import"./useSlotProps-B7eaAxse.js";import"./isHostComponent-BISCXPu1.js";import"./Grow-Ddp49Qv2.js";import"./utils-CjhFWKAk.js";import"./Box-CEWEJJLI.js";import"./createSvgIcon-BGX0Ng63.js";import"./createSvgIcon-D9r0IoHX.js";import"./ownerWindow-Du-g-nGR.js";import"./DeleteForever-DFs1ISRG.js";import"./ToggleButton-BmxOUbFj.js";import"./MaterialButton-B6SHXbjE.js";import"./DialogView-DGLzIzFt.js";import"./useTranslation-CSn3qglU.js";import"./context-pRJcWO9r.js";import"./i18nInstance-DtMpzgZE.js";import"./Backdrop-DfAPPLpu.js";import"./Modal-Bd7klfBb.js";import"./IconButton-B3B9m9Eb.js";import"../sb-preview/runtime.js";import"./Stack-CM3tbJY2.js";import"./styled-BGNPDvrT.js";import"./Divider-D-WlYzIr.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[t]="9842671a-8313-4960-8027-ac1d57b2c812",r._sentryDebugIdIdentifier="sentry-dbid-9842671a-8313-4960-8027-ac1d57b2c812")}catch{}})();const y=r=>e=>{const{color:d,title:a,children:c,...l}=e;return i.jsx(f,{title:a,color:d,...l,children:i.jsx(r,{children:c})})},h=y(s);s.__docgenInfo={description:`A grid provides a visual structuring system for a homogeneous and balanced content placement.
@param children The content of the component
@param rest Other props`,methods:[],displayName:"GridView",props:{children:{required:!1,tsType:{name:"ReactNode"},description:""}}};const ut={component:h,title:"Components/Layouts/Sectioned Grid",tags:["autodocs"],argTypes:{title:{description:"The title of the section"},children:{description:"The content of the component"}}},o={args:{title:"Sectioned Grid View Story Title",children:Array.from(Array(10)).map((r,t)=>i.jsx(u,{title:`Card ${t+1}`,subtitle:`Subtitle ${t+1}`,description:`Description ${t+1}`},t))}};var n,p,m;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:"{\n  args: {\n    title: 'Sectioned Grid View Story Title',\n    children: Array.from(Array(10)).map((_, index) => <CardView key={index} title={`Card ${index + 1}`} subtitle={`Subtitle ${index + 1}`} description={`Description ${index + 1}`} />)\n  }\n}",...(m=(p=o.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};const ft=["Default"];export{o as Default,ft as __namedExportsOrder,ut as default};
